suite: test controller deployment
templates:
  - deployment.yaml
tests:
  - it: should render deployment with default values
    template: deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME
      - equal:
          path: spec.replicas
          value: 1
      - hasDocuments:
          count: 1

  - it: should render deployment with custom replica count
    template: deployment.yaml
    set:
      replicaCount: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3

  - it: should have correct container image
    template: deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].name
          value: tools
          pattern: "^cr\\.kagent\\.dev/kagent-dev/kagent/tools:.+"

  - it: should use global tag when set
    template: deployment.yaml
    set:
      tools:
        image:
          tag: "v1.0.0"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: ghcr.io/kagent-dev/kagent/tools:v1.0.0

  - it: should have correct resources
    template: deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 100m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 128Mi
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 1000m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 512Mi

  - it: should have correct service account name
    template: deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: RELEASE-NAME

  - it: should have correct container port
    template: deployment.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8084

  - it: should set nodeSelector
    set:
      nodeSelector:
        role: AI
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            role: AI

  - it: should set tolerations
    set:
      tolerations:
        - key: role
          operator: Equal
          value: AI
          effect: NoSchedule
    asserts:
      - contains:
          any: true
          path: spec.template.spec.tolerations
          content:
            key: role
            value: AI
            effect: NoSchedule
            operator: Equal

  - it: should render custom node affinity from values
    set:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/e2e-az-name
                    operator: In
                    values:
                      - e2e-az1
    asserts:
      - equal:
          path: spec.template.spec.affinity
          value:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/e2e-az-name
                        operator: In
                        values:
                          - e2e-az1

  - it: should render topologySpreadConstraints with labelSelector fallback
    set:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: zone
          whenUnsatisfiable: ScheduleAnyway
    asserts:
      - equal:
          path: spec.template.spec.topologySpreadConstraints[0].topologyKey
          value: zone
      - equal:
          path: spec.template.spec.topologySpreadConstraints[0].labelSelector.matchLabels
          value:
            app.kubernetes.io/name: kagent-tools
            app.kubernetes.io/instance: RELEASE-NAME
